name: Re-render all

on:
  workflow_dispatch:
  # TODO: add cron for this

jobs:
  rerender:
    name: Re-render feedstock ${{ matrix.feedstock }}-${{ matrix.release }}
    runs-on:  ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        release: ["release-v25.06"]
        feedstock: ["sofa"]
        # release: ["nightly", "release-25.06"]
        # feedstock: ["sofa", "sofa-app", "sofa-beamadapter", "sofa-cosserat", "sofa-glfw", "sofa-modelorderreduction", "sofa-python3", "sofa-qt", "sofa-softrobots", "sofa-softrobotsinverse", "sofa-stlib"]
    steps:
    - uses: actions/checkout@v4

    - name: Install miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        miniforge-version: latest
        channels: conda-forge

    - name: Install tools using conda
      shell: bash -l {0}
      run: conda install conda-smithy python pyyaml git

    - name: Debug output linux config before
      shell: bash -l {0}
      run: cat conda/recipes/${{ matrix.release }}/${{ matrix.feedstock }}/.ci_support/linux_64_.yaml

    - name: Re-render ${{ matrix.release }}/${{ matrix.feedstock }} using conda smithy and filter configs
      shell: bash -l {0}
      run: |
        CONDA_BUILD_CONFIG_FILE=conda/configs/conda-build.yaml
        FEEDSTOCK_DIR=conda/recipes/${{ matrix.release }}/${{ matrix.feedstock }}
        echo "FEEDSTOCK_DIR=$FEEDSTOCK_DIR" >> $GITHUB_ENV
        bash scripts/rerender.sh $CONDA_BUILD_CONFIG_FILE $FEEDSTOCK_DIR

    - name: Debug output linux config after
      shell: bash -l {0}
      run: cat conda/recipes/${{ matrix.release }}/${{ matrix.feedstock }}/.ci_support/linux_64_.yaml

    - name: Check if at least one config needs update
      shell: bash -l {0}
      run: |
        set +e
        git diff --exit-code $FEEDSTOCK_DIR/.ci_support/*.yaml
        NEEDS_UPDATE=$?
        echo "NEEDS_UPDATE=$NEEDS_UPDATE" >> $GITHUB_ENV
        if [[ $NEEDS_UPDATE -eq 0 ]]; then
          echo "Feedstock does not need update"
        else
          echo "Feedstock needs update"
        fi

    - name: Bump recipe build number
      if: ${{ env.NEEDS_UPDATE == 1 }}
      run: |
        # python scripts/bump_build_number.py ${{ env.FEEDSTOCK_DIR }}/recipe/recipe.yaml
        RESULT=$(python scripts/bump_build_number.py ${{ env.FEEDSTOCK_DIR }}/recipe/recipe.yaml)
        NEW_BUILD_NUMBER=$(echo "$RESULT" | jq -r '.new_build_number')
        echo "==== NEW_BUILD_NUMBER = $NEW_BUILD_NUMBER"
        echo "NEW_BUILD_NUMBER=$NEW_BUILD_NUMBER" >> $GITHUB_ENV
        echo "BRANCH_NAME=rebuild_${{ matrix.feedstock }}_${{ matrix.release }}_build_${{ env.NEW_BUILD_NUMBER }}" >> $GITHUB_ENV

    - name: Create PR
      if: ${{ env.NEEDS_UPDATE == 1 }}
      uses: peter-evans/create-pull-request@v7
      with:
        base: master
        token: ${{ secrets.TEST_PAT }}
        commit-message: Rebuild ${{ matrix.feedstock }}-${{ matrix.release }} build number ${{ env.NEW_BUILD_NUMBER }}
        committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
        author: ${{ github.actor }} <${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com>
        branch: ${{ env.BRANCH_NAME }}
        delete-branch: true
        labels: rerender
        add-paths: |
            ${{ env.FEEDSTOCK_DIR }}/recipe/recipe.yaml
            ${{ env.FEEDSTOCK_DIR }}/.ci_support/*.yaml
        title: '[Rebuild] Rebuild ${{ matrix.feedstock }}-${{ matrix.release }} build ${{ env.NEW_BUILD_NUMBER }}'
        body: |
          Rebuild feedstock ${{ matrix.feedstock }}:
            - version ${{ matrix.release }}
            - new build number: ${{ env.NEW_BUILD_NUMBER }}
          --
          Auto-generated by [create-pull-request][1]
          [1]: https://github.com/peter-evans/create-pull-request

  # build-packages:
  #   uses: ./.github/workflows/build_publish_package.yml
  #   with:
  #     package-name: ${{ matrix.feedstock }}
  #   # TODO: matrix build
  #     # runner: ${{ matrix.target.runner }}
  #     # platform: ${{ matrix.target.platform }}
  #     runner: ubuntu-latest
  #     platform: linux-64
  #     anaconda-channel: sofa-framework-prerelease
  #     recipe-dir: ${{ matrix.release }}
  #   secrets:
  #     anaconda-token: ${{ secrets.ANACONDA_PRERELEASE_TOKEN }}
      # secrets:
      #   DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
    - name: Trigger another workflow via API
      env:
        GH_TOKEN: ${{ secrets.TEST_PAT }}
        REF: ${{ env.BRANCH_NAME }}
      run: |
        curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GH_TOKEN" \
          https://api.github.com/repos/sofa-framework/conda-ci/actions/workflows/build_publish_package.yml/dispatches \
          -d '{"ref":"$REF","inputs":{"package-name":"sofa", "runner":"ubuntu-latest","platform":"linux-64","recipe-dir":"release-v25.06","anaconda-channel":"sofa-framework-prerelease",}}'